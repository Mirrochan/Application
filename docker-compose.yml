version: '3.8'

services:
  db:
    image: postgres:15-alpine
    env_file: .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - db_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d Event_Managment_Db || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./Backend/Event_Management_System
      dockerfile: Dockerfile
    ports:
      - "5107:5107"
    environment:
      - ASPNETCORE_ENVIRONMENT=${ASPNETCORE_ENVIRONMENT}
      - ConnectionStrings__DefaultConnection=${CONNECTION_STRING}
      - JwtOptions__SecretKey=${JWT_SECRET}
    env_file: .env
    depends_on:
      db:
        condition: service_healthy
    restart: on-failure

  frontend:
    build:
      context: ./Frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - backend
    restart: on-failure

  migrator:
    image: mcr.microsoft.com/dotnet/sdk:9.0
    working_dir: /src
    volumes:
      - ./Backend/Event_Management_System:/src
    depends_on:
      db:
        condition: service_healthy
    entrypoint: ["bash", "-c", "dotnet restore && dotnet ef database update --project Infrastructure/Infrastructure.csproj --startup-project Event_Management_System/Event_Management_System.csproj || true"]
    env_file: .env
    restart: 'no'

volumes:
  db_data:
